plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id 'org.beryx.runtime' version '1.1.2'
    id "com.jfrog.bintray" version "1.8.4"
    id 'maven-publish'
    id 'idea'
}

group 'org.mrcube'
version = '2019.04_1'
mainClassName = 'org.mrcube.MR3'
sourceCompatibility = targetCompatibility = '11'

project.ext {
    moduleName = 'org.mrcube.mrcube'
    artifactId = 'mrcube'
    defaultEncoding = 'UTF-8'
}

repositories {
    jcenter()
}

wrapper {
    gradleVersion = '5.0'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.mrcube.MR3'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

idea {
    module {
        inheritOutputDirs = true
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'org.mrcube.MR3'
    }
    archiveName = "mrcube.jar"
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['java.desktop', 'java.logging']
    imageDir = file("$buildDir/mrcube-${version}")
    imageZip = file("$buildDir/mrcube-${version}.zip")
}

tasks.runtime.doLast {
    copy {
        from('./README.md')
        into("$buildDir/mrcube-${version}")
    }
    copy {
        from('./README.ja.md')
        into("$buildDir/mrcube-${version}")
    }
    copy {
        from('./LICENSE')
        into("$buildDir/mrcube-${version}")
    }
}

dependencies {
    compile 'jgraph:jgraph:5.13.0.0'
    compile 'org.apache.jena:jena-core:3.10.0'
    compile 'org.apache.jena:jena-arq:3.10.0'
    compile 'org.slf4j:slf4j-simple:1.7.25'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId = 'org.mrcube'
            artifactId = 'mrcube'

            from components.java
            pom {
                name = 'MRCube'
                description = 'Meta-Model Management based on RDFs Revision Reflection'
                url = 'http://mrcube.org/'
                licenses {
                    license {
                        name = 'GNU GENERAL PUBLIC LICENSE, Version 3'
                        url = 'http://www.gnu.org/licenses/gpl-3.0.html'
                    }
                }
                developers {
                    developer {
                        id = 't-morita'
                        name = 'Takeshi Morita'
                        email = 't_morita@ae.keio.ac.jp'
                    }
                }
            }
        }
    }
}

def siteUrl = 'https://mrcube.org/'
def githubUrl = 'https://github.com/mr-3/mrcube'
bintray {
    user = project.getProperty('bintray_user')
    key = project.getProperty('bintray_api_key')
    publications = ['MyPublication']
    override = true
    pkg {
        repo = 'maven'
        name = project.group + ':' + project.ext.artifactId
        userOrg = 'mrcube'
        licenses = ['GPL']
        websiteUrl = siteUrl
        vcsUrl = githubUrl + '.git'
        issueTrackerUrl = githubUrl + '/issues'
        version {
            name = project.version
        }
    }
}
